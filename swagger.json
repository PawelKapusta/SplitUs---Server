{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My SplitUs Project CRUD",
    "description": "My SplitUs Project Application API",
    "contact": {
      "email": "pawel.kapusta@student.uj.edu.pl"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Everything about Users in system"
    },
    {
      "name": "Bills",
      "description": "All bills in system"
    },
    {
      "name": "UsersBills",
      "description": "Relations between users and bills"
    },
    {
      "name": "Groups",
      "description": "All groups in system"
    },
    {
      "name": "GroupsUsers",
      "description": "Relations between groups and users"
    },
    {
      "name": "Comments",
      "description": "All comments in system"
    },
    {
      "name": "Questions FAQ",
      "description": "All Questions FAQ in system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "integer"
        }
      ],
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "ID",
        "FullName",
        "Email",
        "Password",
        "Phone",
        "BirthDate",
        "isAdmin",
        "isBlocked"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32",
          "description": "This is primary key, auto-increment value",
          "uniqueItems": true
        },
        "FullName": {
          "type": "string",
          "maxLength": 70
        },
        "Email": {
          "type": "string",
          "format": "email",
          "maxLength": 255
        },
        "Password": {
          "type": "string",
          "format": "passport",
          "description": "Passport is hashed",
          "maxLength": 255
        },
        "Phone": {
          "type": "integer",
          "minLength": 9,
          "maxLength": 9
        },
        "BirthDate": {
          "type": "string",
          "format": "date-time"
        },
        "AvatarImage": {
          "type": "string",
          "format": "url",
          "maxLength": 1024
        },
        "isAdmin": {
          "type": "boolean",
          "default": false
        },
        "isBlocked": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Group": {
      "required": ["ID", "Name", "Description", "DataCreated"],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32",
          "description": "This is primary key, auto-increment value",
          "uniqueItems": true
        },
        "Name": {
          "type": "string",
          "maxLength": 50
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "DataCreated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Bill": {
      "required": [
        "ID",
        "Name",
        "Description",
        "DataCreated",
        "DataEnd",
        "CurrencyCode",
        "Debt",
        "OwnerId",
        "GroupId"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32",
          "description": "This is primary key, auto-increment value",
          "uniqueItems": true
        },
        "Name": {
          "type": "string",
          "maxLength": 50
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "DataCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DataEnd": {
          "type": "string",
          "format": "date-time"
        },
        "BillImage": {
          "type": "string",
          "maxLength": 1024
        },
        "CurrencyCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "Debt": {
          "type": "number",
          "format": "double"
        },
        "OwnerId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Users table"
        },
        "CodeQR": {
          "type": "string",
          "maxLength": 1024
        },
        "GroupId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Groups table"
        }
      }
    },
    "GroupsUsers": {
      "required": ["ID", "GroupId", "UserId"],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32",
          "description": "This is primary key, auto-increment value",
          "uniqueItems": true
        },
        "GroupId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Groups table"
        },
        "UserId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Users table"
        }
      }
    },
    "UsersBills": {
      "required": ["ID", "UserId", "BillId", "Debt"],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32",
          "description": "This is primary key, auto-increment value",
          "uniqueItems": true
        },
        "UserId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Users table"
        },
        "BillId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Bills table"
        },
        "Debt": {
          "type": "number",
          "format": "double"
        },
        "isRegulated": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Comment": {
      "required": ["ID", "UserId", "BillId", "Content"],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32",
          "description": "This is primary key, auto-increment value",
          "uniqueItems": true
        },
        "UserId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Users table"
        },
        "BillId": {
          "type": "integer",
          "format": "int32",
          "description": "This is foreign key to Bills table"
        },
        "Content": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "QuestionFAQ": {
      "required": ["ID", "Question", "Answer"],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32",
          "description": "This is primary key, auto-increment value",
          "uniqueItems": true
        },
        "Question": {
          "type": "string",
          "maxLength": 255
        },
        "Answer": {
          "type": "string",
          "format": "text"
        }
      }
    }
  }
}
